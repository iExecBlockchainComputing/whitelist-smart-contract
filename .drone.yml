kind: pipeline
type: docker
name: smart-contract-default

trigger:
  event:
    exclude:
      - promote

steps:
  - name: install deps
    image: node:18.12.1
    pull: always
    commands:
      - node -v
      - npm -v
      - npm ci

  - name: check format
    image: node:18.12.1
    commands:
      - npm run check-format

  - name: check lint
    image: node:18.12.1
    commands:
      - npm run lint

  - name: compile smart contracts
    image: node:18.12.1
    commands:
      - npm run compile

  - name: test smart contracts
    image: node:18.12.1
    commands:
      - npm run test
---
# deploy smart contract in prod or dev
kind: pipeline
type: docker
name: deploy smart contract

trigger:
  event:
    - promote
  target:
    - smart-contract-dev
    - smart-contract-production
  branch:
    - develop
    - main

steps:
  - name: install deps
    image: node:18.12.1
    pull: always
    commands:
      - node -v
      - npm -v
      - npm ci

  - name: check format
    image: node:18.12.1
    commands:
      - npm run check-format

  - name: check lint
    image: node:18.12.1
    commands:
      - npm run check-format

  - name: compile smart contracts
    image: node:18.12.1
    commands:
      - npm run compile

  - name: test smart contracts
    image: node:18.12.1
    commands:
      - npm run test

  - name: smart-contract dev deployment
    image: node:18.12.1
    environment:
      WALLET_PRIVATE_KEY:
        from_secret: deployer-dev-privatekey
    commands:
      - npm run deploy
    when:
      target:
        - smart-contract-dev
      branch:
        - develop

  - name: smart-contract prod deployment
    image: node:18.12.1
    environment:
      WALLET_PRIVATE_KEY:
        from_secret: deployer-prod-privatekey
    commands:
      - npm run deploy
    when:
      target:
        - smart-contract-production
      branch:
        - main

  # - name: verify dev contract
  #   image: node:18.12.1
  #   commands:
  #     - npm run verify -- --network bellecour $(cat .smart-contract-address)
  #   when:
  #     target:
  #       - smart-contract-dev
  #     branch:
  #       - develop

  # - name: verify prod contract
  #   image: node:18.12.1
  #   commands:
  #     - npm run verify -- --network bellecour $(cat .smart-contract-address)
  #   when:
  #     target:
  #       - smart-contract-production
  #     branch:
  #       - main
---
# pipeline to add resource to whitelist smart contract
kind: pipeline
type: docker
name: add-resource-to-whitelist

trigger:
  event:
    - promote
  target:
    - add-resource-to-whitelist-dev
    - add-resource-to-whitelist-prod
  branch:
    - develop
    - main

steps:
  - name: install deps
    image: node:18.12.1
    pull: always
    commands:
      - node -v
      - npm -v
      - npm ci

  - name: check format
    image: node:18.12.1
    commands:
      - npm run check-format

  - name: check lint
    image: node:18.12.1
    commands:
      - npm run check-format

  - name: compile smart contracts
    image: node:18.12.1
    commands:
      - npm run compile

  - name: test smart contracts
    image: node:18.12.1
    commands:
      - npm run test

  - name: add resource to whitelist dev
    image: node:18.12.1
    params:
      - CONTRACT_ADDRESS
      - ADDRESS_TO_ADD
    environment:
      WALLET_PRIVATE_KEY:
        from_secret: deployer-dev-privatekey
    commands:
      - npm run addResourceToWhitelist
    when:
      target:
        - add-resource-to-whitelist-dev
      branch:
        - develop

  - name: add resource to whitelist prod
    image: node:18.12.1
    params:
      - CONTRACT_ADDRESS
      - ADDRESS_TO_ADD
    environment:
      WALLET_PRIVATE_KEY:
        from_secret: deployer-prod-privatekey
    commands:
      - npm run addResourceToWhitelist
    when:
      target:
        - add-resource-to-whitelist-prod
      branch:
        - main
---
# pipeline to remove resource from whitelist smart contract
kind: pipeline
type: docker
name: remove-resource-from-whitelist

trigger:
  event:
    - promote
  target:
    - remove-resource-from-whitelist-dev
    - remove-resource-from-whitelist-prod
  branch:
    - develop
    - main

steps:
  - name: install deps
    image: node:18.12.1
    pull: always
    commands:
      - node -v
      - npm -v
      - npm ci

  - name: check format
    image: node:18.12.1
    commands:
      - npm run check-format

  - name: check lint
    image: node:18.12.1
    commands:
      - npm run check-format

  - name: compile smart contracts
    image: node:18.12.1
    commands:
      - npm run compile

  - name: test smart contracts
    image: node:18.12.1
    commands:
      - npm run test

  - name: remove resource from whitelist dev
    image: node:18.12.1
    params:
      - CONTRACT_ADDRESS
      - ADDRESS_TO_REMOVE
    environment:
      WALLET_PRIVATE_KEY:
        from_secret: deployer-dev-privatekey
    commands:
      - npm run removeResourceFromWhitelist
    when:
      target:
        - remove-resource-from-whitelist-dev
      branch:
        - develop

  - name: remove resource from whitelist prod
    image: node:18.12.1
    params:
      - CONTRACT_ADDRESS
      - ADDRESS_TO_REMOVE
    environment:
      WALLET_PRIVATE_KEY:
        from_secret: deployer-prod-privatekey
    commands:
      - npm run removeResourceFromWhitelist
    when:
      target:
        - remove-resource-from-whitelist-prod
      branch:
        - main
---
# pipeline to transfer ownership of whitelist smart contract
kind: pipeline
type: docker
name: transfer-ownership-whitelist-smart-contract

trigger:
  event:
    - promote
  target:
    - transfer-ownership-whitelist-smart-contract-dev
    - transfer-ownership-whitelist-smart-contract-prod
  branch:
    - develop
    - main

steps:
  - name: install deps
    image: node:18.12.1
    pull: always
    commands:
      - node -v
      - npm -v
      - npm ci

  - name: check format
    image: node:18.12.1
    commands:
      - npm run check-format

  - name: check lint
    image: node:18.12.1
    commands:
      - npm run check-format

  - name: compile smart contracts
    image: node:18.12.1
    commands:
      - npm run compile

  - name: test smart contracts
    image: node:18.12.1
    commands:
      - npm run test

  - name: transfer ownsership dev
    image: node:18.12.1
    params:
      - NEW_OWNER_ADDRESS
    environment:
      WALLET_PRIVATE_KEY:
        from_secret: deployer-dev-privatekey
    commands:
      - npm run transferOwnership
    when:
      target:
        - transfer-ownership-whitelist-smart-contract-dev
      branch:
        - develop

  - name: transfer ownsership prod
    image: node:18.12.1
    params:
      - NEW_OWNER_ADDRESS
    environment:
      WALLET_PRIVATE_KEY:
        from_secret: deployer-prod-privatekey
    commands:
      - npm run transferOwnership
    when:
      target:
        - transfer-ownership-whitelist-smart-contract-prod
      branch:
        - main
